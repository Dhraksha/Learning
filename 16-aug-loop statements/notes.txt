Control Statements:

Sequential : if, if-else, switch
Iterative : while,do-while, for 
Jump: continue, return , break


Sequential : if, if-else, switch

if: 

syntax: 

if(test-condition){

    // code
}

            <script>
                var course="Full stack"
                if(course=="Full stack"){
                    console.log("Frontend")
                }
            </script>

if-else:

if(test-condition){


}
else{


}


            <script>
                var course="Full stack"
                if(course=="Full stack123"){
                    console.log("Frontend")
                }
                else{
                    console.log("Backend")
                }
            </script>



            <script>
                
                if(0){                                           // In if condition only for 0 it gives the boolean expression false , for any other values and strings it gives the boolean expression true.
                    console.log("true")
                }
                else{
                    console.log("false")
                }
            </script>

switch: 

switch(choice){
    case casevalue1 :  // code
    case casevalue2 :  // code 
    case casevalue3 : // code 
    .
    .
    .
    .
    default: // code
}
*casevalue can be a number or string.
            
            <script>
                var course="mean";
                switch(course){
                    case "java":console.log("you choosen java");break;
                    case "mern":console.log("you choosen react");break;
                    case "mean":console.log("you choosen angular");break;
                    default:console.log("n/a")
                }
            </script>




Example:
<html>
    <head>
        <body>
            <select onchange="content()" id="lang">
                <option>select your language</option>
                <option>telugu</option>
                <option>hindi</option>
                <option>english</option>
                <option>malayalam</option>
            </select>
            <h1 id="msg"></h1>
            <script>
                   var msg= document.getElementById("msg")
                function content(){
                   var choice= document.getElementById("lang").value;
                    switch(choice){
                    case "telugu": msg.innerText = "హే అందరికీ" ; break;
                    case "hindi": msg.innerText = ("सुनिये सब लोग");break;
                    case "english": msg.innerText =("hello everyone");break;
                    case "malayalam": msg.innerText =("ഹായ് എല്ലാവർക്കും");break;
                }
                }
            </script>
        </body>
    </head>
</html>


Iterative: 

1. while: 

 syntax: 

 while(test-condition){

  // code

 }

 
            <script>
              var i=0
              while(i<7){
                console.log(i);
                i++;
              }
            </script>



<html>
<head>
</head>
<body>
    <ul id="usersInfo">
        
    </ul>
    <script>
        var users = ["kiran", "rajesh", "naveen", "venkat"];
        var usersInfo = document.getElementById("usersInfo");
        var index = 0;
        var listItems = "";
        while (index < users.length) {
            listItems = listItems + "<li>" + users[index] + "</li>";
            index++;
        }
        console.log(listItems);
        usersInfo.innerHTML = listItems;
    </script>
</body>
</html>


do-while: 

syntax: 
       do{

          // code

       }while(test-condition);


In DO-WHILE, the do will be executed for the first time without checking the condition.


         <script>
                var index=100;
                do{
                    console.log(index);
                    index++;
                }while(index<16)
        </script>




For loop: 

syntax: 

for(init; test-condition; inc/ dec) {

 // code

}
        <script>
               for(i=0 ; i<10 ; i++){
                console.log(i)
               }
        </script>
*If the condition is not there in for loop also it can run but in the while statement it cannot run without the condition.


<html>
<head>
</head>
<body>
    <ul id="usersInfo">
        
    </ul>
    <script>
        var users = ["kiran", "rajesh", "naveen", "venkat"];
        var usersInfo = document.getElementById("usersInfo");
        var listItems = "";
        for(index=0 ; index < users.length ; index++)
         {
            listItems = listItems + "<li>" + users[index] + "</li>";
        }
        console.log(listItems);
        usersInfo.innerHTML = listItems;
    </script>
</body>
</html>



Jump Statements:

break, continue and return 

break: it is used to terminate a block . 

continue:  To skip / terminate the current iteration, we can use continue. 

return: to terminate a function, we can use return:

*Using continue Statement:
           <script>
        for(var i=1 ; i < 10 ; i++){
            if(i==4)
            {
                continue;
            }
            console.log(i);
        }      
           </script>


*Using return Statement:
        <script>
        function f1(){
            var a=10
            if(a<30){
                console.log(a)//10
                a=a-3;
                console.log(a)//7
                a=a+300;
                console.log(a)//307
                return;
                a=a+500;
                console.log(a)
            }
            console.log(a)
        } f1()    
       </script>